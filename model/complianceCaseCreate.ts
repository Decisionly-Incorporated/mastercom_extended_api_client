/**
 * Mastercom Extended API
 * The Mastercom Extended API consists of endpoints used by issuers and acquirers to manage Single Message System disputes.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ComplianceCaseCreate {
    /**
    * Identifier assigned by Mastercom Claims Manager or Mastercom Extended to the claim.  Mastercom Extended claimId can be obtained from the ```POST /claims/searches``` endpoint. 
    */
    'claimId'?: string;
    /**
    * Identifier assigned by Mastercom to a document which is pending processing, obtained from the ```POST /documents``` endpoint. 
    */
    'documentUploadedId'?: string;
    /**
    * Field used by customers to identify the specific case for internal auditing and tracing purposes.  *Valid Values/Format:* Alpha, numeric, and special characters. 
    */
    'customerFilingNumber'?: string;
    /**
    * Amount disputed in the case, written without a decimal. Includes the exponent.  *Valid Values/Format:* Numeric. 
    */
    'caseDisputeAmount': string;
    /**
    * Alphabetic code defining the currency of the caseDisputeAmount.  CONDITIONAL: Required if claimId is not provided.  Cannot be used with caseDisputeAmountNumericCurrencyCode.  *Valid Values/Format:* Uppercase alpha. 
    */
    'caseDisputeAmountAlphaCurrencyCode'?: string;
    /**
    * Numeric code defining the currency of the caseDisputeAmount.  CONDITIONAL: Required if claimId is not provided.  Cannot be used with caseDisputeAmountAlphaCurrencyCode.  *Valid Values/Format:* Numeric. 
    */
    'caseDisputeAmountNumericCurrencyCode'?: string;
    /**
    * Identifier (issuer/acquirer) for the party filing the case.
    */
    'filingAs': ComplianceCaseCreate.FilingAsEnum;
    /**
    * A unique number used to identify the party filing the case.  CONDITIONAL: Required if claimId is not provided.  *Valid Values/Format:* Numeric. 
    */
    'filingIca'?: string;
    /**
    * A unique number used to identify the party the case was filed against.  *Valid Values/Format:* Numeric.  CONDITIONAL: Required if claimId is not provided. 
    */
    'filedAgainstIca'?: string;
    /**
    * Violation code submitted for the pre-compliance or compliance case.
    */
    'violationCode': ComplianceCaseCreate.ViolationCodeEnum;
    /**
    * Date of the compliance violation.
    */
    'violationDate': string;
    /**
    * Additional information or note may be entered in this field. Credentials, card numbers, and similar sensitive information such as PCI or PII data should never be entered in this field.  *Valid Values/Format:* Alpha, numeric, and special characters. 
    */
    'memo': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "claimId",
            "baseName": "claimId",
            "type": "string"
        },
        {
            "name": "documentUploadedId",
            "baseName": "documentUploadedId",
            "type": "string"
        },
        {
            "name": "customerFilingNumber",
            "baseName": "customerFilingNumber",
            "type": "string"
        },
        {
            "name": "caseDisputeAmount",
            "baseName": "caseDisputeAmount",
            "type": "string"
        },
        {
            "name": "caseDisputeAmountAlphaCurrencyCode",
            "baseName": "caseDisputeAmountAlphaCurrencyCode",
            "type": "string"
        },
        {
            "name": "caseDisputeAmountNumericCurrencyCode",
            "baseName": "caseDisputeAmountNumericCurrencyCode",
            "type": "string"
        },
        {
            "name": "filingAs",
            "baseName": "filingAs",
            "type": "ComplianceCaseCreate.FilingAsEnum"
        },
        {
            "name": "filingIca",
            "baseName": "filingIca",
            "type": "string"
        },
        {
            "name": "filedAgainstIca",
            "baseName": "filedAgainstIca",
            "type": "string"
        },
        {
            "name": "violationCode",
            "baseName": "violationCode",
            "type": "ComplianceCaseCreate.ViolationCodeEnum"
        },
        {
            "name": "violationDate",
            "baseName": "violationDate",
            "type": "string"
        },
        {
            "name": "memo",
            "baseName": "memo",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComplianceCaseCreate.attributeTypeMap;
    }
}

export namespace ComplianceCaseCreate {
    export enum FilingAsEnum {
        Issuer = <any> 'ISSUER',
        Acquirer = <any> 'ACQUIRER'
    }
    export enum ViolationCodeEnum {
        AcqStmtRequest = <any> 'ACQ_STMT_REQUEST',
        AtmDcc = <any> 'ATM_DCC',
        CbExceedsTimeframe = <any> 'CB_EXCEEDS_TIMEFRAME',
        ChinaAdjReturn = <any> 'CHINA_ADJ_RETURN',
        FeeCollection = <any> 'FEE_COLLECTION',
        InaccurateAuth = <any> 'INACCURATE_AUTH',
        InaccurateClearing = <any> 'INACCURATE_CLEARING',
        Interchange = <any> 'INTERCHANGE',
        InvSubFirstPresent = <any> 'INV_SUB_FIRST_PRESENT',
        Match = <any> 'MATCH',
        MpqrMcqr = <any> 'MPQR_MCQR',
        NonMcMaestroCnp = <any> 'NON_MC_MAESTRO_CNP',
        RefundCorrection = <any> 'REFUND_CORRECTION',
        SameDayProcessing = <any> 'SAME_DAY_PROCESSING',
        SendOi = <any> 'SEND_OI',
        SendRiPayment = <any> 'SEND_RI_PAYMENT',
        ThirdPartyAllOther = <any> 'THIRD_PARTY_ALL_OTHER',
        UnspentGiftCard = <any> 'UNSPENT_GIFT_CARD',
        AllOther = <any> 'ALL_OTHER'
    }
}
