/**
 * Mastercom Extended API
 * The Mastercom Extended API consists of endpoints used by issuers and acquirers to manage Single Message System disputes.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ClaimSearch {
    /**
    * Unique identifier assigned by Mastercom, obtained from the ```POST /transactions/searches``` endpoint.  *Valid Values/Format:* Alpha, numeric and special characters 
    */
    'contextId'?: string;
    /**
    * Context type associated to the context ID from the transaction search response.  CONDITIONAL: Cannot be used in conjunction with switchSerialNumber or primaryAccountNumber. 
    */
    'contextType'?: ClaimSearch.ContextTypeEnum = ClaimSearch.ContextTypeEnum.Transaction;
    /**
    * Number that is embossed, encoded, or both, on a Mastercard card that identifies the issuer and the particular cardholder account.  CONDITIONAL: Requires startDate and endDate. Cannot be used with switchSerialNumber.  *Valid Values/Format:* Numeric 
    */
    'primaryAccountNumber'?: string;
    /**
    * A unique nine-digit identification number assigned by the Single Message System.  CONDITIONAL: Requires startDate. Cannot be used with primaryAccountNumber.  *Valid Values/Format:* Numeric 
    */
    'switchSerialNumber'?: string;
    /**
    * Beginning of search date and time range. For searches using Switch Serial Number, this is the Settlement Date.
    */
    'startDateTime': Date;
    /**
    * Search date maximum range. The search range is a maximum of 30 days and searches can be completed for up to 365 days of history.   CONDITIONAL: Required if using primaryAccountNumber. 
    */
    'endDateTime'?: Date;
    /**
    * Number of claimsData items the list should be limited to.
    */
    'limit'?: number = 25;
    /**
    * Specifies the number of items to offset the start of the list.
    */
    'offset'?: number = 0;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "contextId",
            "baseName": "contextId",
            "type": "string"
        },
        {
            "name": "contextType",
            "baseName": "contextType",
            "type": "ClaimSearch.ContextTypeEnum"
        },
        {
            "name": "primaryAccountNumber",
            "baseName": "primaryAccountNumber",
            "type": "string"
        },
        {
            "name": "switchSerialNumber",
            "baseName": "switchSerialNumber",
            "type": "string"
        },
        {
            "name": "startDateTime",
            "baseName": "startDateTime",
            "type": "Date"
        },
        {
            "name": "endDateTime",
            "baseName": "endDateTime",
            "type": "Date"
        },
        {
            "name": "limit",
            "baseName": "limit",
            "type": "number"
        },
        {
            "name": "offset",
            "baseName": "offset",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ClaimSearch.attributeTypeMap;
    }
}

export namespace ClaimSearch {
    export enum ContextTypeEnum {
        Transaction = <any> 'TRANSACTION'
    }
}
